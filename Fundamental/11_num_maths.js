let score = 88.8787

let balance = new Number(score)

// console.log(balance);

// console.log(balance.toString().length);

// console.log(balance.toFixed(2));

// note: .toFixed() provide value according to notation point 


let numbers = 658.65

// note: .toPrecision() provide value according to first number


// console.log(numbers.toPrecision(4));


let hundreds = 1000000

// note: .toLocaleString() make value separated by comma according to bangladesh standard

// console.log(hundreds.toLocaleString('en-BN'));




// ________________________________________MATHS_________________________________________________



let values = -7

// console.log(Math.abs(values));

// note: Math.abs() convert negative value in positive but not convert positive value in negative 


// console.log(Math.ceil(9.1));

// note: Math.ceil() convert value in biggest point

// console.log(Math.floor(9.9));

// note: Math.floor() convert value in lowest point

// console.log(Math.round(7.4));

// note: Math.round() provide round value. we use this in most time note ceil and floor

// console.log(Math.sqrt(25));

// note: Math.sqrt() provide root value. like sqrt of 81 is 9



// console.log(Math.random());

// note: Math.random() provide value between 0 to 1

// console.log(Math.random() * 10);

// note if we multiply with 10 its shift a value on lef. 

// t-i-q: but the problem is this value should be 0. so if we avoid this case added +1 with main values. Now it's granted the value must bigger then 0


// console.log((Math.random() * 10) + 1 );

/*

note: its a good example that generated by terminal

0.7656751428298283
0.09623935991562194
3.4026512911882003

*/


const min = 10

const max = 20

console.log( Math.round((Math.random() * (max - min )) + min) );

// note: this output must be between 20 to 90 and minimum value must be 20 or bigger than 20